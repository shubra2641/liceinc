---
alwaysApply: false
---

# Blade Files Envato Compliance Rules

## ⚡ **AUTO-APPLY INSTRUCTIONS**
**This file should be automatically read and applied to every Blade file processing request.**
**Follow these rules EXACTLY as specified below.**

## 🎯 **Core Requirements**

### **1. CSS & JavaScript Separation (CRITICAL)**
- **NO inline CSS**: All styling must be moved to external CSS files in `public/assets/`
- **NO inline JavaScript**: All scripts must be moved to external JS files in `public/assets/`
- **NO @push directives**: Remove all `@push('styles')` and `@push('scripts')` from Blade files
- **NO <style> tags**: Remove all `<style>` tags from Blade files
- **NO <script> tags**: Remove all `<script>` tags from Blade files
- **Use layout imports**: Import CSS/JS files in the main layout file only
- **Consolidate CSS**: Merge duplicate CSS rules and remove redundant styles
- **Consolidate JS**: Merge duplicate JavaScript functions and remove redundant code
- **SINGLE FILE PER LAYOUT**: Create ONE consolidated CSS file and ONE consolidated JS file per layout
- **COMPRESSED FILES**: All consolidated files must be minified/compressed for production
- **NO DUPLICATE CODE**: Remove all duplicate CSS rules and JavaScript functions across the entire layout

### **2. CSS Quality Standards**
- **High Quality Design**: Premium-level design that justifies commercial sale
- **Unique Styling**: Go beyond free alternatives with superior implementation
- **No Similarity**: Avoid designs too similar to existing Envato items
- **Valid CSS**: All code must validate (excluding vendor prefixes)
- **Proper HTML Structure**: No block elements (div, h2) inside inline elements (span, em)
- **Icon Standards**: Use FontAwesome classes (fas fa-*) instead of SVG or path elements
- **External Stylesheets**: All styling must be in separate CSS files

### **3. JavaScript Standards**
- **Progressive Enhancement**: Provide degraded functionality when JS is disabled
- **Sufficient Complexity**: Implement unique features beyond basic functionality
- **Quality Implementation**: Well-designed, secure, and well-commented code
- **Easy Integration**: Intuitive API for buyers to customize and integrate
- **External Scripts**: All JavaScript must be in separate JS files

### **4. PHP Code Restrictions**
- **NO @php directives**: Remove all `@php` code blocks from Blade files
- **PSR-12 Compliance**: Follow modern PHP standards
- **Security Measures**: Implement input validation, SQL injection prevention, XSS protection
- **Clean Code**: Well-written, secure, and well-commented code
- **No Log::info**: Remove success logging, keep only error logging
- **Multiple Features**: Implement more than one focus area
- **Easy Integration**: Intuitive API with clear documentation
- **Comprehensive Documentation**: Well-written docs with pictorial guides

### **5. Language System Requirements (CRITICAL)**
- **NO Hardcoded Text**: All text must use Laravel's language system
- **Use @lang() or __()**: All text strings must be translatable
- **Language Files**: All text must be stored in `resources/lang/` files
- **Multi-language Support**: Support for multiple languages (en, ar, etc.)
- **Dynamic Language Switching**: Allow users to switch languages
- **Language Fallbacks**: Provide fallback to default language
- **Consistent Naming**: Use consistent language key naming conventions
- **No HTML in Language Files**: Keep language files clean, use placeholders

## 🔧 **Implementation Guidelines**

### **AUTO-PROCESSING RULES:**
**When ANY Blade file is sent for processing, automatically apply these rules:**

1. **AUTO-EXTRACT**: Move all CSS to `public/assets/css/` files
2. **AUTO-EXTRACT**: Move all JavaScript to `public/assets/js/` files
3. **AUTO-REMOVE**: Remove all `@push` directives
4. **AUTO-REMOVE**: Remove all `<style>` and `<script>` tags
5. **AUTO-CONSOLIDATE**: Merge duplicate CSS rules
6. **AUTO-CONSOLIDATE**: Merge duplicate JavaScript functions
7. **AUTO-REMOVE**: Remove all `@php` code blocks
8. **AUTO-VALIDATE**: Ensure HTML structure compliance
9. **AUTO-ICONS**: Replace SVG/path icons with FontAwesome classes
10. **AUTO-IMPORT**: Add CSS/JS imports to layout file
11. **AUTO-CONSOLIDATE-LAYOUT**: Create single consolidated CSS file per layout (admin.css, front.css, user.css)
12. **AUTO-CONSOLIDATE-LAYOUT**: Create single consolidated JS file per layout (admin.js, front.js, user.js)
13. **AUTO-COMPRESS**: Minify/compress all consolidated files
14. **AUTO-DEDUPLICATE**: Remove all duplicate CSS rules and JS functions across entire layout
15. **AUTO-LANGUAGE**: Convert all hardcoded text to language system
16. **AUTO-LANGUAGE-FILES**: Create/update language files for all text
17. **AUTO-LANGUAGE-KEYS**: Generate consistent language key naming
18. **AUTO-LANGUAGE-SUPPORT**: Add multi-language support structure

### **File Processing Rules:**
1. Work on ONE Blade file at a time
2. Don't move to another file until current file is completely finished
3. Ensure file works without errors
4. Follow Envato rules precisely
5. **MANDATORY**: Remove ALL inline CSS and JavaScript
6. **MANDATORY**: Remove ALL @push directives
7. **MANDATORY**: Remove ALL @php code blocks
8. **MANDATORY**: Consolidate duplicate styles and scripts
9. **MANDATORY**: Use FontAwesome icons only
10. **MANDATORY**: Validate HTML structure

### **When Processing Blade Files:**
1. Extract all CSS to external files
2. Extract all JavaScript to external files
3. Remove all @push directives
4. Remove all <style> and <script> tags
5. Remove all @php code blocks
6. Consolidate duplicate CSS rules
7. Consolidate duplicate JavaScript functions
8. Replace SVG/path icons with FontAwesome
9. Validate HTML structure
10. Add imports to layout file
11. **CONSOLIDATE BY LAYOUT**: Group all CSS/JS by layout type (admin, front, user)
12. **CREATE SINGLE FILES**: Generate one CSS file and one JS file per layout
13. **COMPRESS FILES**: Minify all consolidated files for production
14. **REMOVE DUPLICATES**: Eliminate all duplicate code across the entire layout
15. **CONVERT TO LANGUAGE SYSTEM**: Replace all hardcoded text with language keys
16. **CREATE LANGUAGE FILES**: Generate language files for all text content
17. **IMPLEMENT MULTI-LANGUAGE**: Add language switching functionality
18. **VALIDATE LANGUAGE SUPPORT**: Ensure all text is translatable

## 📋 **Success Criteria:**
- No inline CSS or JavaScript
- No @push directives
- No <style> or <script> tags
- No @php code blocks
- All CSS in external files
- All JavaScript in external files
- Consolidated duplicate code
- FontAwesome icons only
- Valid HTML structure
- Premium-quality design
- Unique functionality
- Easy integration
- **SINGLE CSS FILE PER LAYOUT**: One consolidated CSS file per layout (admin.css, front.css, user.css)
- **SINGLE JS FILE PER LAYOUT**: One consolidated JS file per layout (admin.js, front.js, user.js)
- **COMPRESSED FILES**: All files minified for production
- **ZERO DUPLICATES**: No duplicate CSS rules or JS functions across entire layout
- **LANGUAGE SYSTEM**: All text uses Laravel's language system
- **MULTI-LANGUAGE SUPPORT**: Support for multiple languages (en, ar, etc.)
- **NO HARDCODED TEXT**: All text is translatable
- **LANGUAGE FILES**: All text stored in language files
- **DYNAMIC LANGUAGE SWITCHING**: Users can switch languages
- **CONSISTENT LANGUAGE KEYS**: Proper naming conventions for language keys

## 🚫 **Common Rejections to Avoid:**
- Low quality design
- Too general functionality
- Similarity to existing items
- Inline CSS usage
- Invalid CSS code
- Block elements in inline elements
- SVG/path icons
- @push directive usage
- <style>/<script> tags in Blade
- @php code blocks
- Duplicate CSS/JS code
- Poor documentation
- Lack of market prospects
- **Hardcoded text strings**
- **No multi-language support**
- **Missing language files**
- **Inconsistent language key naming**
- **No language switching functionality**

## ✅ **Commitment to Envato Terms**
- Follow all Envato marketplace requirements
- Ensure code meets professional standards
- Provide value to potential buyers
- Maintain high quality throughout the project

## 🤖 **AUTO-EXECUTION COMMANDS**
**These commands should be automatically executed for every Blade file:**

```bash
# Auto-check for inline CSS
grep -r "style=" resources/views/ --include="*.blade.php"

# Auto-check for inline JavaScript
grep -r "<script>" resources/views/ --include="*.blade.php"

# Auto-check for @push directives
grep -r "@push" resources/views/ --include="*.blade.php"

# Auto-check for @php blocks
grep -r "@php" resources/views/ --include="*.blade.php"

# Auto-check for SVG/path icons
grep -r "<svg\|<path" resources/views/ --include="*.blade.php"

# Auto-check for duplicate CSS classes
grep -r "class=" resources/views/ --include="*.blade.php" | sort | uniq -d

# Auto-validate HTML structure
grep -r "<div.*<span\|<h[1-6].*<span" resources/views/ --include="*.blade.php"

# Auto-consolidate CSS files by layout
find public/assets/css/ -name "*.css" -exec cat {} \; > public/assets/css/admin.css
find public/assets/css/ -name "*.css" -exec cat {} \; > public/assets/css/front.css
find public/assets/css/ -name "*.css" -exec cat {} \; > public/assets/css/user.css

# Auto-consolidate JS files by layout
find public/assets/js/ -name "*.js" -exec cat {} \; > public/assets/js/admin.js
find public/assets/js/ -name "*.js" -exec cat {} \; > public/assets/js/front.js
find public/assets/js/ -name "*.js" -exec cat {} \; > public/assets/js/user.js

# Auto-compress consolidated files
minify public/assets/css/admin.css > public/assets/css/admin.min.css
minify public/assets/css/front.css > public/assets/css/front.min.css
minify public/assets/css/user.css > public/assets/css/user.min.css
minify public/assets/js/admin.js > public/assets/js/admin.min.js
minify public/assets/js/front.js > public/assets/js/front.min.js
minify public/assets/js/user.js > public/assets/js/user.min.js

# Auto-remove duplicate CSS rules
sort public/assets/css/admin.css | uniq > public/assets/css/admin.css.tmp && mv public/assets/css/admin.css.tmp public/assets/css/admin.css
sort public/assets/css/front.css | uniq > public/assets/css/front.css.tmp && mv public/assets/css/front.css.tmp public/assets/css/front.css
sort public/assets/css/user.css | uniq > public/assets/css/user.css.tmp && mv public/assets/css/user.css.tmp public/assets/css/user.css

# Auto-remove duplicate JS functions
sort public/assets/js/admin.js | uniq > public/assets/js/admin.js.tmp && mv public/assets/js/admin.js.tmp public/assets/js/admin.js
sort public/assets/js/front.js | uniq > public/assets/js/front.js.tmp && mv public/assets/js/front.js.tmp public/assets/js/front.js
sort public/assets/js/user.js | uniq > public/assets/js/user.js.tmp && mv public/assets/js/user.js.tmp public/assets/js/user.js

# Auto-check for hardcoded text
grep -r ">[A-Za-z]" resources/views/ --include="*.blade.php" | grep -v "{{" | grep -v "@lang\|__("

# Auto-check for missing language keys
grep -r "{{.*}}" resources/views/ --include="*.blade.php" | grep -v "@lang\|__("

# Auto-validate language file structure
find resources/lang/ -name "*.php" -exec php -l {} \;

# Auto-check for language key consistency
grep -r "@lang\|__(" resources/views/ --include="*.blade.php" | sort | uniq
```

## 📋 **AUTO-CHECKLIST (Execute for every Blade file):**
- [ ] **AUTO-EXTRACT**: All CSS moved to external files
- [ ] **AUTO-EXTRACT**: All JavaScript moved to external files
- [ ] **AUTO-REMOVE**: All @push directives removed
- [ ] **AUTO-REMOVE**: All <style> tags removed
- [ ] **AUTO-REMOVE**: All <script> tags removed
- [ ] **AUTO-REMOVE**: All @php blocks removed
- [ ] **AUTO-CONSOLIDATE**: Duplicate CSS rules merged
- [ ] **AUTO-CONSOLIDATE**: Duplicate JavaScript functions merged
- [ ] **AUTO-ICONS**: SVG/path icons replaced with FontAwesome
- [ ] **AUTO-VALIDATE**: HTML structure validated
- [ ] **AUTO-IMPORT**: CSS/JS imports added to layout
- [ ] **AUTO-QUALITY**: Premium design standards met
- [ ] **AUTO-UNIQUE**: Unique functionality implemented
- [ ] **AUTO-DOCUMENT**: Comprehensive documentation added
- [ ] **AUTO-CONSOLIDATE-LAYOUT**: CSS consolidated into single file per layout (admin.css, front.css, user.css)
- [ ] **AUTO-CONSOLIDATE-LAYOUT**: JS consolidated into single file per layout (admin.js, front.js, user.js)
- [ ] **AUTO-COMPRESS**: All consolidated files minified for production
- [ ] **AUTO-DEDUPLICATE**: All duplicate CSS rules and JS functions removed across entire layout
- [ ] **AUTO-PERFORMANCE**: Single file per layout for optimal loading performance
- [ ] **AUTO-LANGUAGE**: All hardcoded text converted to language system
- [ ] **AUTO-LANGUAGE-FILES**: Language files created/updated for all text
- [ ] **AUTO-LANGUAGE-KEYS**: Consistent language key naming implemented
- [ ] **AUTO-LANGUAGE-SUPPORT**: Multi-language support structure added
- [ ] **AUTO-LANGUAGE-VALIDATION**: All text is translatable and validated

## 🧹 **Code Cleanup & Consolidation**

### **MANDATORY Code Cleanup Rules:**
1. **Extract ALL Inline CSS**: Move to `public/assets/css/` files
2. **Extract ALL Inline JavaScript**: Move to `public/assets/js/` files
3. **Remove ALL @push Directives**: Delete from Blade files
4. **Remove ALL <style> Tags**: Delete from Blade files
5. **Remove ALL <script> Tags**: Delete from Blade files
6. **Remove ALL @php Blocks**: Delete from Blade files
7. **Consolidate Duplicate CSS**: Merge similar rules
8. **Consolidate Duplicate JS**: Merge similar functions
9. **Replace SVG Icons**: Use FontAwesome classes only
10. **Validate HTML Structure**: Fix block/inline element issues

### **Code Analysis Commands:**
```bash
# Find inline CSS
grep -r "style=" resources/views/ --include="*.blade.php"

# Find inline JavaScript
grep -r "<script>" resources/views/ --include="*.blade.php"

# Find @push directives
grep -r "@push" resources/views/ --include="*.blade.php"

# Find @php blocks
grep -r "@php" resources/views/ --include="*.blade.php"

# Find SVG/path icons
grep -r "<svg\|<path" resources/views/ --include="*.blade.php"

# Find duplicate CSS classes
grep -r "class=" resources/views/ --include="*.blade.php" | sort | uniq -d
```

### **Cleanup Checklist:**
- [ ] **ZERO TOLERANCE**: No inline CSS remains
- [ ] **ZERO TOLERANCE**: No inline JavaScript remains
- [ ] **ZERO TOLERANCE**: No @push directives remain
- [ ] **ZERO TOLERANCE**: No <style> tags remain
- [ ] **ZERO TOLERANCE**: No <script> tags remain
- [ ] **ZERO TOLERANCE**: No @php blocks remain
- [ ] **ZERO TOLERANCE**: No SVG/path icons remain
- [ ] **ZERO TOLERANCE**: No duplicate CSS/JS code remains
- [ ] **ZERO TOLERANCE**: No hardcoded text strings remain
- [ ] **ZERO TOLERANCE**: All text uses language system
- [ ] **ZERO TOLERANCE**: All language files are properly structured
- [ ] **ZERO TOLERANCE**: All language keys follow naming conventions

## 🔍 **Blade File Structure Validation**

### **Required Blade File Structure:**
```blade
{{-- Clean Blade file with no inline CSS/JS and language system --}}
@extends('layouts.app')

@section('title', __('admin.products.title'))

@section('content')
    {{-- HTML content only with language system --}}
    <div class="container">
        <h1 class="page-title">{{ __('admin.products.welcome') }}</h1>
        <p class="description">{{ __('admin.products.description') }}</p>
        <button class="btn btn-primary">{{ __('common.buttons.save') }}</button>
    </div>
@endsection
```

### **Forbidden Elements in Blade Files:**
- ❌ `<style>` tags
- ❌ `<script>` tags
- ❌ `@push` directives
- ❌ `@php` blocks
- ❌ Inline `style=""` attributes
- ❌ Inline `onclick=""` attributes
- ❌ SVG or path elements
- ❌ Duplicate CSS classes
- ❌ Duplicate JavaScript functions
- ❌ **Hardcoded text strings**
- ❌ **Text without language keys**
- ❌ **Mixed language systems**

### **Required Elements in Blade Files:**
- ✅ Clean HTML structure
- ✅ FontAwesome icon classes
- ✅ Semantic HTML elements
- ✅ Proper form structure
- ✅ Accessibility attributes
- ✅ Clean Blade syntax
- ✅ Proper section usage
- ✅ **Language system usage**
- ✅ **All text with language keys**
- ✅ **Consistent language key naming**
- ✅ **Multi-language support structure**

## 📝 **File Organization Examples**

### **✅ CORRECT - Clean Blade file with language system:**
```blade
{{-- resources/views/admin/products/index.blade.php --}}
@extends('layouts.admin')

@section('title', __('admin.products.title'))

@section('content')
    <div class="products-container">
        <div class="page-header">
            <h1 class="page-title">
                <i class="fas fa-box"></i>
                {{ __('admin.products.management') }}
            </h1>
            <a href="{{ route('admin.products.create') }}" class="btn btn-primary">
                <i class="fas fa-plus"></i>
                {{ __('admin.products.add_new') }}
            </a>
        </div>
        
        <div class="products-table">
            {{-- Table content with language system --}}
        </div>
    </div>
@endsection
```

### **❌ WRONG - Blade file with violations:**
```blade
{{-- ❌ WRONG - Contains violations --}}
@extends('layouts.admin')

@section('title', 'Products Management')  {{-- ❌ Hardcoded text --}}

@push('styles')
    <style>
        .products-container { margin: 20px; }  {{-- ❌ Inline CSS --}}
    </style>
@endpush

@section('content')
    <div class="products-container" style="margin: 20px;">  {{-- ❌ Inline style --}}
        <h1>Products</h1>  {{-- ❌ Hardcoded text --}}
        <svg>...</svg>  {{-- ❌ SVG icon --}}
        <button>Save</button>  {{-- ❌ Hardcoded text --}}
    </div>
@endsection

@push('scripts')
    <script>
        function init() { ... }  {{-- ❌ Inline JavaScript --}}
    </script>
@endpush
```

## 🌐 **Language System Organization**

### **Required Language File Structure:**

#### **English Language Files:**
```php
{{-- resources/lang/en/admin.php --}}
<?php
return [
    'products' => [
        'title' => 'Products Management',
        'management' => 'Products Management',
        'add_new' => 'Add New Product',
        'edit' => 'Edit Product',
        'delete' => 'Delete Product',
        'save' => 'Save Product',
        'cancel' => 'Cancel',
        'search' => 'Search Products',
        'no_products' => 'No products found',
        'product_created' => 'Product created successfully',
        'product_updated' => 'Product updated successfully',
        'product_deleted' => 'Product deleted successfully',
    ],
    'categories' => [
        'title' => 'Categories Management',
        'add_new' => 'Add New Category',
        'edit' => 'Edit Category',
        'delete' => 'Delete Category',
    ],
];

{{-- resources/lang/en/common.php --}}
<?php
return [
    'buttons' => [
        'save' => 'Save',
        'cancel' => 'Cancel',
        'delete' => 'Delete',
        'edit' => 'Edit',
        'create' => 'Create',
        'update' => 'Update',
        'back' => 'Back',
        'next' => 'Next',
        'previous' => 'Previous',
    ],
    'messages' => [
        'success' => 'Operation completed successfully',
        'error' => 'An error occurred',
        'warning' => 'Warning',
        'info' => 'Information',
    ],
    'validation' => [
        'required' => 'This field is required',
        'email' => 'Please enter a valid email address',
        'min' => 'This field must be at least :min characters',
        'max' => 'This field must not exceed :max characters',
    ],
];
```

#### **Arabic Language Files:**
```php
{{-- resources/lang/ar/admin.php --}}
<?php
return [
    'products' => [
        'title' => 'إدارة المنتجات',
        'management' => 'إدارة المنتجات',
        'add_new' => 'إضافة منتج جديد',
        'edit' => 'تعديل المنتج',
        'delete' => 'حذف المنتج',
        'save' => 'حفظ المنتج',
        'cancel' => 'إلغاء',
        'search' => 'البحث في المنتجات',
        'no_products' => 'لم يتم العثور على منتجات',
        'product_created' => 'تم إنشاء المنتج بنجاح',
        'product_updated' => 'تم تحديث المنتج بنجاح',
        'product_deleted' => 'تم حذف المنتج بنجاح',
    ],
    'categories' => [
        'title' => 'إدارة الفئات',
        'add_new' => 'إضافة فئة جديدة',
        'edit' => 'تعديل الفئة',
        'delete' => 'حذف الفئة',
    ],
];

{{-- resources/lang/ar/common.php --}}
<?php
return [
    'buttons' => [
        'save' => 'حفظ',
        'cancel' => 'إلغاء',
        'delete' => 'حذف',
        'edit' => 'تعديل',
        'create' => 'إنشاء',
        'update' => 'تحديث',
        'back' => 'رجوع',
        'next' => 'التالي',
        'previous' => 'السابق',
    ],
    'messages' => [
        'success' => 'تمت العملية بنجاح',
        'error' => 'حدث خطأ',
        'warning' => 'تحذير',
        'info' => 'معلومات',
    ],
    'validation' => [
        'required' => 'هذا الحقل مطلوب',
        'email' => 'يرجى إدخال عنوان بريد إلكتروني صحيح',
        'min' => 'يجب أن يكون هذا الحقل على الأقل :min أحرف',
        'max' => 'يجب ألا يتجاوز هذا الحقل :max أحرف',
    ],
];
```

### **Language Key Naming Conventions:**
- **Module-based**: `admin.products.title`, `front.home.welcome`
- **Action-based**: `common.buttons.save`, `common.messages.success`
- **Feature-based**: `auth.login.title`, `auth.register.description`
- **Consistent naming**: Use lowercase with dots for hierarchy
- **Descriptive keys**: Clear and meaningful key names
- **No abbreviations**: Use full words for better readability

### **Language System Usage in Blade:**
```blade
{{-- ✅ CORRECT - Using language system --}}
<h1>{{ __('admin.products.title') }}</h1>
<button>{{ __('common.buttons.save') }}</button>
<p>{{ __('admin.products.no_products') }}</p>

{{-- ✅ CORRECT - With parameters --}}
<p>{{ __('admin.products.product_created', ['name' => $product->name]) }}</p>

{{-- ✅ CORRECT - Pluralization --}}
<p>{{ trans_choice('admin.products.count', $count, ['count' => $count]) }}</p>

{{-- ❌ WRONG - Hardcoded text --}}
<h1>Products Management</h1>
<button>Save</button>
<p>No products found</p>
```

## 🎨 **CSS File Organization**

### **Required CSS File Structure - SINGLE CONSOLIDATED FILE PER LAYOUT:**

#### **Admin Layout CSS:**
```css
/* public/assets/css/admin.css - SINGLE CONSOLIDATED FILE */
/* All admin CSS consolidated into one file */

/* Global Admin Styles */
.admin-container { margin: 0; padding: 0; }
.admin-header { display: flex; justify-content: space-between; align-items: center; }

/* Products Styles */
.products-container { margin: 20px; padding: 15px; }
.products-table { width: 100%; border-collapse: collapse; }

/* Categories Styles */
.categories-container { margin: 20px; padding: 15px; }
.category-form { max-width: 600px; }

/* Common Button Styles */
.btn { padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
.btn-primary { background-color: #007bff; color: white; }
.btn-danger { background-color: #dc3545; color: white; }

/* Form Styles */
.form-group { margin-bottom: 15px; }
.form-control { width: 100%; padding: 8px 12px; border: 1px solid #ddd; }
```

#### **Front Layout CSS:**
```css
/* public/assets/css/front.css - SINGLE CONSOLIDATED FILE */
/* All front-end CSS consolidated into one file */

/* Global Front Styles */
.front-container { max-width: 1200px; margin: 0 auto; }
.front-header { background: #fff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }

/* Homepage Styles */
.hero-section { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }
.hero-title { font-size: 3rem; color: white; text-align: center; }

/* Product Display Styles */
.product-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; }
.product-card { border: 1px solid #ddd; border-radius: 8px; overflow: hidden; }
```

#### **User Layout CSS:**
```css
/* public/assets/css/user.css - SINGLE CONSOLIDATED FILE */
/* All user dashboard CSS consolidated into one file */

/* User Dashboard Styles */
.user-dashboard { display: grid; grid-template-columns: 250px 1fr; gap: 20px; }
.user-sidebar { background: #f8f9fa; padding: 20px; }
.user-content { padding: 20px; }

/* License Management Styles */
.license-list { background: white; border-radius: 8px; padding: 20px; }
.license-item { border-bottom: 1px solid #eee; padding: 15px 0; }
```

## 📜 **JavaScript File Organization**

### **Required JavaScript File Structure - SINGLE CONSOLIDATED FILE PER LAYOUT:**

#### **Admin Layout JavaScript:**
```javascript
// public/assets/js/admin.js - SINGLE CONSOLIDATED FILE
// All admin JavaScript consolidated into one file

class AdminManager {
    constructor() {
        this.init();
    }

    init() {
        this.bindEvents();
        this.initializeComponents();
    }

    bindEvents() {
        // Global admin event bindings
        document.addEventListener('click', (e) => {
            if (e.target.matches('.btn-delete')) {
                this.handleDelete(e.target.dataset.id, e.target.dataset.type);
            }
            if (e.target.matches('.btn-edit')) {
                this.handleEdit(e.target.dataset.id, e.target.dataset.type);
            }
        });
    }

    initializeComponents() {
        // Initialize all admin components
        this.initProductsManager();
        this.initCategoriesManager();
        this.initFormsManager();
    }

    // Products Management
    initProductsManager() {
        // Products functionality
    }

    // Categories Management
    initCategoriesManager() {
        // Categories functionality
    }

    // Forms Management
    initFormsManager() {
        // Forms functionality
    }

    // Common Methods
    handleDelete(id, type) {
        // Common delete functionality
    }

    handleEdit(id, type) {
        // Common edit functionality
    }
}

// Initialize when DOM is ready
document.addEventListener('DOMContentLoaded', () => {
    new AdminManager();
});
```

#### **Front Layout JavaScript:**
```javascript
// public/assets/js/front.js - SINGLE CONSOLIDATED FILE
// All front-end JavaScript consolidated into one file

class FrontManager {
    constructor() {
        this.init();
    }

    init() {
        this.bindEvents();
        this.initializeComponents();
    }

    bindEvents() {
        // Global front-end event bindings
        document.addEventListener('click', (e) => {
            if (e.target.matches('.product-card')) {
                this.viewProduct(e.target.dataset.id);
            }
            if (e.target.matches('.search-btn')) {
                this.handleSearch();
            }
        });
    }

    initializeComponents() {
        // Initialize all front-end components
        this.initProductGrid();
        this.initSearch();
        this.initNavigation();
    }

    // Product Grid
    initProductGrid() {
        // Product grid functionality
    }

    // Search Functionality
    initSearch() {
        // Search functionality
    }

    // Navigation
    initNavigation() {
        // Navigation functionality
    }

    // Common Methods
    viewProduct(id) {
        // View product functionality
    }

    handleSearch() {
        // Search handling
    }
}

// Initialize when DOM is ready
document.addEventListener('DOMContentLoaded', () => {
    new FrontManager();
});
```

#### **User Layout JavaScript:**
```javascript
// public/assets/js/user.js - SINGLE CONSOLIDATED FILE
// All user dashboard JavaScript consolidated into one file

class UserManager {
    constructor() {
        this.init();
    }

    init() {
        this.bindEvents();
        this.initializeComponents();
    }

    bindEvents() {
        // Global user event bindings
        document.addEventListener('click', (e) => {
            if (e.target.matches('.license-item')) {
                this.viewLicense(e.target.dataset.id);
            }
            if (e.target.matches('.download-btn')) {
                this.downloadFile(e.target.dataset.id);
            }
        });
    }

    initializeComponents() {
        // Initialize all user components
        this.initLicenseManager();
        this.initDownloadsManager();
        this.initProfileManager();
    }

    // License Management
    initLicenseManager() {
        // License functionality
    }

    // Downloads Management
    initDownloadsManager() {
        // Downloads functionality
    }

    // Profile Management
    initProfileManager() {
        // Profile functionality
    }

    // Common Methods
    viewLicense(id) {
        // View license functionality
    }

    downloadFile(id) {
        // Download file functionality
    }
}

// Initialize when DOM is ready
document.addEventListener('DOMContentLoaded', () => {
    new UserManager();
});
```

## 🔧 **Layout File Integration**

### **Required Layout File Structure - SINGLE CONSOLIDATED FILES:**

#### **Admin Layout:**
```blade
{{-- resources/views/layouts/admin.blade.php --}}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@yield('title', 'Admin Panel')</title>
    
    {{-- SINGLE CONSOLIDATED CSS FILE --}}
    <link rel="stylesheet" href="{{ asset('assets/css/admin.css') }}">
    
    {{-- FontAwesome --}}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    @yield('content')
    
    {{-- SINGLE CONSOLIDATED JS FILE --}}
    <script src="{{ asset('assets/js/admin.js') }}"></script>
</body>
</html>
```

#### **Front Layout:**
```blade
{{-- resources/views/layouts/front.blade.php --}}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@yield('title', 'Home')</title>
    
    {{-- SINGLE CONSOLIDATED CSS FILE --}}
    <link rel="stylesheet" href="{{ asset('assets/css/front.css') }}">
    
    {{-- FontAwesome --}}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    @yield('content')
    
    {{-- SINGLE CONSOLIDATED JS FILE --}}
    <script src="{{ asset('assets/js/front.js') }}"></script>
</body>
</html>
```

#### **User Layout:**
```blade
{{-- resources/views/layouts/user.blade.php --}}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@yield('title', 'User Dashboard')</title>
    
    {{-- SINGLE CONSOLIDATED CSS FILE --}}
    <link rel="stylesheet" href="{{ asset('assets/css/user.css') }}">
    
    {{-- FontAwesome --}}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    @yield('content')
    
    {{-- SINGLE CONSOLIDATED JS FILE --}}
    <script src="{{ asset('assets/js/user.js') }}"></script>
</body>
</html>
```

## 📋 **Final Checklist for Each Blade File:**
- [ ] No inline CSS or JavaScript
- [ ] No @push directives
- [ ] No <style> or <script> tags
- [ ] No @php code blocks
- [ ] All CSS moved to external files
- [ ] All JavaScript moved to external files
- [ ] Duplicate code consolidated
- [ ] FontAwesome icons only
- [ ] Valid HTML structure
- [ ] Premium design quality
- [ ] Unique functionality
- [ ] Easy integration
- [ ] Comprehensive documentation
- [ ] Envato compliance verified
- [ ] **SINGLE CSS FILE PER LAYOUT**: One consolidated CSS file (admin.css, front.css, user.css)
- [ ] **SINGLE JS FILE PER LAYOUT**: One consolidated JS file (admin.js, front.js, user.js)
- [ ] **COMPRESSED FILES**: All consolidated files minified for production
- [ ] **ZERO DUPLICATES**: No duplicate CSS rules or JS functions across entire layout
- [ ] **LAYOUT-SPECIFIC**: CSS/JS properly organized by layout type
- [ ] **PERFORMANCE OPTIMIZED**: Single file per layout for faster loading
- [ ] **LANGUAGE SYSTEM**: All text uses Laravel's language system
- [ ] **NO HARDCODED TEXT**: All text strings are translatable
- [ ] **LANGUAGE FILES**: All text stored in language files
- [ ] **MULTI-LANGUAGE SUPPORT**: Support for multiple languages (en, ar, etc.)
- [ ] **LANGUAGE KEY NAMING**: Consistent naming conventions for language keys
- [ ] **LANGUAGE VALIDATION**: All language files are properly structured
- [ ] **LANGUAGE SWITCHING**: Dynamic language switching functionality
- [ ] **LANGUAGE FALLBACKS**: Proper fallback to default language